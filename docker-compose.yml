version: "3"
services:
  mongo-express:
    image: mongo-express
    ports:
      - 8081:8081
    depends_on:
      - mongodb
     links:
      - mongodb
    networks:
      - ecommerce-net
    environment:
      ME_CONFIG_BASICAUTH_USERNAME: moraesarmando
      ME_CONFIG_BASICAUTH_PASSWORD: MongoExpress2022!
      ME_CONFIG_MONGODB_PORT: 27017
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: MongoDB2022!
   

  mongodb:
    image: mongo
    ports:
      - 27017:27017
    networks:
      - ecommerce-net
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: MongoDB


  zookeeper:
    restart: always
    image: confluentinc/cp-zookeeper:latest
    ports:
      - "22181:2181"
    networks:
      - ecommerce-net
    environment:
      - ZOOKEEPER_CLIENT_PORT=2181
      - ZOOKEEPER_TICK_TIME=2000


  kafka:
    hostname: kafka
    image: confluentinc/cp-kafka:latest
    restart: always
    ports:
      - "9092:9092"
     depends_on:
      - zookeeper
    links:
      - zookeeper:zookeeper
       networks:
      - ecommerce-net
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_INTER_BROKER_LISTENER_NAME=PLAINTEXT
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT


  redis-compose:
    image: redis:alpine
    hostname: redis-compose
    command: [ "redis-server","--bind","redis-compose","--port","6379" ]
    ports:
      - "6379:6379"
    networks:
      - ecommerce-net
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
      - REDIS_DISABLE_COMMANDS=FLUSHDB,FLUSHALL


# API
  cliente-api:
    build: ./cliente
    image: cliente:latest
    ports:
      - "8085:8085"
    depends_on:
      - mongodb
    networks:
      - ecommerce-net
    links:
      - mongodb
    environment:
      - SPRING_DATA_MONGODB_HOST=mongodb
      - SPRING_DATA_MONGODB_PORT=27017
      - SPRING_DATASOURCE_PASSWORD=root
      - SERVER_PORT=8083


  produto-api:
    build: ./produto
    image: produto:latest
    ports:
      - "8086:8086"
    networks:
      - ecommerce-net
    depends_on:
      - mongodb
    environment:
      - SPRING_DATA_MONGODB_HOST=mongodb
      - SPRING_DATA_MONGODB_PORT=27017
      - SPRING_DATASOURCE_PASSWORD=root
    links:
      - mongodb
      - redis-compose


  compra-api:
    build: ./compra
    image: compra:latest
    ports:
      - "8087:8087"
    networks:
      - ecommerce-net
    depends_on:
      - mongodb
      - kafka
    environment:
      - SERVER_PORT=8080
      - KAFKA_ADDRESS=kafka:9092
    links:
      - kafka:kafka


  compra-validator:
    build: ./compra-validador
    image: comprasvalidator:latest
    ports:
      - "8088:8088"
    networks:
      - ecommerce-net
    depends_on:
      - compras-api
      - kafka
      - redis-compose
      - mongodb
    environment:
      - SPRING_DATA_MONGODB_HOST=mongodb
      - SPRING_DATA_MONGODB_PORT=27017
      - SPRING_DATASOURCE_PASSWORD=root
      - KAFKA_ADDRESS=kafka:9092
      - WEBCLIENT_PRODUTO_URL=http://produto-api:8086
      - WEBCLIENT_CLIENTE_URL=http://cliente-api:8085
    links:
      - produto-api:produto-api
      - kafka:kafka 
      - mongodb


networks:
  ecommerce-net:
    driver: bridge